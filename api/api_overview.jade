extends ../base/layout
block vars
    - var page = 'api/api_overview'
block content
    h1 API Overview

    h2 General notes
    p All pages of the API documentation describe how <b>one</b> entity looks. This does not include the links that are generated by Spring
        | HATEOAS.

    h2 Date format
    p Dates can be in the format of a timestamp, 'yyyy-MM-dd' or 'yyyy-MM-dd HH:mm:ss'.

    h2#links Links
    p Some entities have links to other entities. You always find the links in the "_links" property. A link always has a field "href" that can be used to access the linked
        | resource.
    pre.
        employee = {
            ...,
            "_links": {
                "credential": {
                    "href": "http://localhost:8080/api/employee/1/credential"
                }
            }
        }
    p If you want to change the link on an entity please read the <a href="http://docs.spring.io/spring-data/rest/docs/2.1.1.RELEASE/reference/html/repository-resources.html#repository-resources.association-resource">
        | Spring Data REST documentation</a>. Basically, you can PUT, POST and DELETE on links. PUT and POST need the content type text/uri-list and you send the href of the other resource as the request body.

    h2#projections Projections
    p Sometimes it is cumbersome to fetch linked resources via <a href="#links">links</a>. For these cases there are projections defined that embed a linked resource into the
        | response.
    pre.
        % > curl localhost:8080/api/billableTimes/1?projection=withProject
        {
            ...,
            "project": {
                "id": 12,
                "identifier": ...
            }
        }

    h2 PUT vs PATCH
    p All entities that are updateable via PUT are also updateable via PATCH. With PATCH you can just send the fields you want to edit.
    pre.
        % > curl -X PATCH -d "{\"firstName\": \"John\"}" -H "Content-Type: application/json" localhost:8080/api/employees/1

    h2 Discoverability
    p.
        Most of the API is discoverable. What does that mean? A response contains not only the data but also possible links that you can follow.
        Even the root of the API shows you what is available.
    p
        b Caveat:
        |  Only Spring Data REST exported controllers are self-documented like that.
    pre.
        % > curl localhost:8080/api/
        "api": {
            "_links": {
                "credentials": {
                    "href": "http://localhost:8080/api/credentials{?page,size,sort}",
                    "templated": true
                },
                "contactPersons": {
                    "href": "http://localhost:8080/api/contactPersons{?page,size,sort}",
                    "templated": true
                },...
            }
        }

        % > curl localhost:8080/api/credentials/
        {
        "_links": {
            "self": {
                "href": "http://localhost:8080/api/credentials{?page,size,sort}",
                "templated": true
            },
            "search": {
                "href": "http://localhost:8080/api/credentials/search"
            }
        },
        "_embedded": {
            "credentials": [
                {
                    "id": 0,
                    "email": "admin@techdev.de",
                    "enabled": true,
                    "_links": {
                        "self": {
                            "href": "http://localhost:8080/api/credentials/0"
                        },
                        "employee": {
                            "href": "http://localhost:8080/api/credentials/0/employee"
                        },
                        "authorities": {
                            "href": "http://localhost:8080/api/credentials/0/authorities"
                        }
                    }
                },...
            ]
        }
        }
    p As you see, this is fairly self explanatory. But be careful: These links do not evaluate if you are allowed to access them so you might get
        | a 403.

    h2#pageable Pageable GET requests.
    p All requests marked with <b>pageable</b> in the parameters section take the following arguments:
    table.pure-table
        thead
            tr
                th name
                th type
                th required
                th description
                th example
        tbody
            tr
                td size
                td numeric
                td false
                td number of elements. greater than 1.
                td 10
            tr
                td page
                td numeric
                td false
                td page to access. 0-based.
                td 1
            tr
                td sort
                td string
                td false
                td property to sort by
                td name